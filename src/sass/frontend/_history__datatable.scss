$tableName: 
    'status',
    'order_num',
    'p_name',
    'p_value',
    'p_time',
    'p_point',
    'billing_date',
    'run_date',
    'action';
.history__datatable {
    @include rwd-mobile {
        display: flex;
        flex-direction: column;
        gap: var(--spacing-2x);
    }
    &-heading  {
        @include rwd-mobile {
            display: none;
        }
    }

    &-data {
        @extend .font-body-m;

        @include rwd-mobile {
            &.grid-tablerow {
                position: relative;
                width: 100%;
                border: 1px solid var(--Gray-04);
                border-radius: $border-radius-base;
        
                grid-template-columns: 1fr 1fr 1fr;
                grid-template-areas: "order_num order_num action"
                "p_name p_name p_name"
                "p_value p_value p_value"
                "p_time p_time p_time"
                "p_point p_point p_point"
                "billing_date billing_date billing_date"
                "run_date run_date run_date"
                "status status status";
                gap: var(--spacing-1x);

                font-size: var(--font-body-s);
                font-weight: #{map-get(map-get($font, 'body-s'), 'fw' )};
                letter-spacing: #{map-get(map-get($font, 'body-s'), 'ls' )};
                line-height: #{map-get(map-get($font, 'body-s'), 'lh' )};
    
                @for $i from 1 through length($tableName) {
                    $property: nth($tableName, $i);
                    .#{$property} {
                        grid-area: #{$property};
                        @if ($property == 'status' or
                            $property == 'p_name' or
                            $property == 'p_value' or
                            $property == 'p_time' or
                            $property == 'p_point' or
                            $property == 'billing_date' or
                            $property == 'run_date' ) {
                                display: flex;
                                gap: var(--spacing-1x);
                                text-align: left;
                                &:before {
                                    content: attr(data-th);
                                    flex: 0 0 65px;
                                    color: var(--main-color);
                                }
                            }
                    }
                }

    
                &::before {
                    content: '';
                    display: block;
                    position: absolute;
                    top: 48px;
                    width: 100%;
                    height: 1px;
                    background-color: var(--Gray-04);
                }
                &::after {
                    content: '';
                    display: block;
                    position: absolute;
                    bottom: calc(22px + 16px);
                    width: 100%;
                    height: 1px;
                    background-color: var(--Gray-04);
                }
                .order_num {
                    display: flex;
                    align-items: center;
                }
                .p_name {
                    padding-top: 16px;
                }
                .run_date {
                    padding-bottom: 16px;
                }

                .action {
                    display: flex;
                    justify-content: flex-end;

                    .action_btn {
                        margin: unset;
                    }
                }

                .status {
                    justify-content: space-between;
                }
            }

        }
    }

    &-td {
        &.status {
            @extend .font-h3;

            @include rwd-mobile {
                font-size: var(--font-body-s);
                font-weight: #{map-get(map-get($font, 'body-s'), 'fw' )};
                letter-spacing: #{map-get(map-get($font, 'body-s'), 'ls' )};
                line-height: #{map-get(map-get($font, 'body-s'), 'lh' )};
            }
        }

        &.p_value, &.p_point, &.action {
            text-align: center;
        }

        &.action {
            position: relative;
        }

        &.order_num {
            width: 150px;
            @include rwd-mobile {
                width: auto;
            }
        }
        &.p_name {
            width: 150px;
            @include rwd-mobile {
                width: auto;
            }
        }
    }

    .action_btn {
        display: flex;
        align-items: center;
        justify-content: center;
        border: none;
        border-radius: 2px;
        margin: auto;
        padding: 0.5rem;
        background-color: transparent;
        transition: all 0.3s ease-in-out;

        &:hover {
            background-color: var(Gray-04);
            path {
                fill: var(--sub-color);
            }
        }

        &:active {
            translate: 1px 1px;
        }
    }

    .action_menu {
        @include absolute(90%, 0);
        z-index: 99;
        background-color: #fff;
        border: 1px solid var(--Gray-04);
        border-radius: $border-radius-base;
        box-shadow: 0 16px 16px #{rgba(color(main-color), 0.3)};
        opacity: 0;
        visibility: hidden;
        z-index: -1;

        width: max-content;

        padding: var(--spacing-2x);
        display: flex;
        flex-direction: column;
        gap: var(--spacing-1x);

        &.js-show {
            opacity: 1;
            visibility: visible;
            z-index: 99;
        }

        &-btn {
            display: flex;
            align-items: center;
            gap: var(--spacing-1x);
            background-color: transparent;
            border: none;

            transition: all 0.3s ease-in-out;

            svg {
                display: block;
            }
            path {
                transition: all 0.3s ease-in-out;
            }

            .txt {
                color: var(--Gray-02);
            }

            &:hover {
                color: var(--sub-color);
                path {
                    fill: var(--sub-color);
                }
            }
        }
    }
}